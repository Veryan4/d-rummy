# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  off;
    text/css                   2d;
    application/javascript     2d;
    ~image/                    max;
    application/pdf            max;
}


server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost;
    root   /usr/share/nginx/html;
    index  index.html index.htm
    expires $expires;
    charset UTF-8; #a must have for AOT compilation with lazy loading: https://stackoverflow.com/questions/51451556/lazy-loaded-modules-with-aot-typeerror-is-not-a-function-when-served-from
    
    error_page 404 /index.html;

    # Main
    location / {
        add_header Content-Security-Policy upgrade-insecure-requests;

        set $cors "true";
        if ($http_origin ~* (https?://.*\.d-rummy\.com(:[0-9]+)?$)) {
            set $cors "true";
        }

        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }

        if ($request_method = 'GET') {
            set $cors "${cors}get";
        }
        if ($request_method = 'POST') {
            set $cors "${cors}post";
        }
        if ($request_method = 'PUT') {
            set $cors "${cors}post";
        }
        if ($request_method = 'PATCH') {
            set $cors "${cors}post";
        }
        if ($request_method = 'DELETE') {
            set $cors "${cors}post";
        }

        if ($cors = "trueget") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "truepost") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }

        #index  index.html index.htm;
        try_files $uri $uri/ @index; # This will allow you to refresh page in your app. Which will not give error 404.    
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}